<project name="plusone" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
  <!-- *************** -->
  <!-- Installing ivy. -->
  <!-- *************** -->
  <property name="ivy.install.version" value="2.1.0-rc2" />
  <condition property="ivy.home" value="${env.IVY_HOME}">
    <isset property="env.IVY_HOME" />
  </condition>
  <property name="ivy.home" value="${user.home}/.ant" />
  <property name="ivy.jar.dir" value="${ivy.home}/lib" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
  
  <target name="download-ivy" unless="offline">
    
    <mkdir dir="${ivy.jar.dir}"/>
    <!-- download Ivy from web site so that it can be used even without any special installation -->
    <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
         dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>
  
  <target name="init-ivy" depends="download-ivy">
    <!-- try to load ivy here from ivy home, in case the user has not already dropped
         it into ant's lib dir (note that the latter copy will always take precedence).
         We will not fail as long as local lib dir exists (it may be empty) and
         ivy is in at least one of ant's lib dir or the local lib dir. -->
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
      
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
             uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>

  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib" location="lib/jars"/>

  <path id="library.jars">
    <fileset dir="${lib}"/>
  </path>

  <target name="init" depends="retrieve">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" debug="on" classpathref="library.jars" includeantruntime="false"/>
  </target>

  <target name="test" depends="compile">
      <junit fork="true">
          <classpath>
              <path refid="library.jars"/>
              <path location="${build}"/>
          </classpath>
          <test name="plusone.utils.SVDTest">
              <formatter type="plain" usefile="false"/>
          </test>
      </junit>
  </target>

  <!--
  <target name="run" depends="compile">
    <java fork="true" classname="plusone.Main">
      <classpath>
        <path refid="library.jars"/>
        <path location="Plusone.jar"/>
      </classpath>
    </java>
  </target>
  -->

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Record the time: this sets jar.tstamp.DSTAMP and jar.tstamp.TSTAMP. -->
    <tstamp prefix="jar.tstamp"/>

    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the Plusone-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/Plusone-${jar.tstamp.DSTAMP}-${jar.tstamp.TSTAMP}.jar" basedir="${build}"/>

    <!-- Copy the new jar file into the Plusone.jar -->
    <copy file="${dist}/lib/Plusone-${jar.tstamp.DSTAMP}-${jar.tstamp.TSTAMP}.jar" tofile="Plusone.jar"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="retrieve" depends="init-ivy">
    <ivy:retrieve/>
  </target>
</project>
